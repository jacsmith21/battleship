import javax.swing.*;
import java.awt.*;
import java.awt.Color;
import java.awt.event.*;
import java.util.Scanner;
import java.util.ArrayList;

/** TO DO
	1. Add font / background colors to code so nothing is hard coded in and we can easily switch them in the settings (LAST)
	3. Highlight ships when selected during ship set up
	4. Make the ships movable when selected during the ship set up
	5. Make commander messsage look better (LAST)
	6. Add theme music (LAST)
	7. Add hit / miss sounds (LAST)
	9. Make images come from direct folder in NETBEANS
*/

public class Game extends JPanel implements ActionListener{
	private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
	
	final int MAX_ROW = 10;
	final int MAX_COL = 10;
	final String ERROR = "err";
	final Color WATER = new Color(64,164,223);
	final Color WATER_BORDER = new Color(82,187,245);
	final Color SHIP = new Color(100,100,100);
	final int[] INIT_AC = {0,0, 0,1, 0,2, 0,3, 0,4};
	final int[] INIT_CR = {5,5, 5,6, 5,7, 5,8};
	final int[] INIT_SB = {7,7, 8,7, 9,7};
	final int[] INIT_FR = {3,9, 4,9, 5,5};
	final boolean DEBUG = true;
	
	/** The text from the commander */
	private JLabel commander;
	
	/** Will be set true when the user is setting their ships*/
	private boolean settingShips; 
	
	/** Will be set true when the users attack turn begins*/
	private boolean attack;
	
	/** Will be set true when the user defense turn begins*/
	private boolean defend;
	
	/** The enemy buttons located in the enemy grid*/
	private JPanel gamePanel;
	
	/** The panel that contains the user grid*/
	private JPanel userBoard;
	
	/** The panel that contains the enemy grid*/
	private JPanel enemyBoard;
	
	/** The user buttons located in the user grid*/
	private JButton[][] userButtons;
	
	/** The enemy buttons located in the enemy grid*/
	private JButton[][] enemyButtons;
	
	/** The button to submit the ship locations*/
	private JButton submitButton;
	
	/** The button to rotate the specified ship*/
	private JButton rotateButton;
	
	/** The font color*/
	private Color fontColor;
	
	/** The background color*/
	private Color backgroundColor;
	
	/** The current ship locations of the user*/
	private ArrayList<int[]> shipLocations;
	
	/** The server*/
	private ClientConnection server;
	
	
    public Game(){
        initComponents(); //initializes the components (generated by NETBEANS)
		
		//better names
		gamePanel = jPanel1;
		userBoard = jPanel2;
		enemyBoard = jPanel4;
		commander = jLabel4;
		submitButton = jButton4;
		rotateButton = jButton6;
		
		this.add(gamePanel);
		
		//Setting initial game states
		settingShips = true;
		attack = false; 
		defend = false;
		
		//Connecting to server
		Scanner sc = new Scanner(System.in);
		int port = sc.nextInt();
		server = new ClientConnection();
		server.createConnection(port);

		//Initializing boards
		userButtons = setGrid(userBoard); //setting up user grid to blue
		enemyButtons = setGrid(enemyBoard); //setting up the enemy grid to blue
		setUnclickable(enemyButtons);
		initShips(); //initializes the ships to predetermined locations
    }


	
	/** Sets the grid of the passed in GridLayout panel, initializes everything to water
		@param panel the panel to set the grid
		@player the player character to identify the board
		@return the button array
	*/	
	public JButton[][] setGrid(JPanel panel){
		JButton[][] temp = new JButton[MAX_ROW][MAX_COL];
		for(int i = 0; i < MAX_ROW; i++){
			for(int j = 0; j < MAX_COL; j++){
				GridButton button = new GridButton(i, j);
				button.setBorderPainted(true);
				button.setBackground(WATER);
				button.setBorder(BorderFactory.createLineBorder(WATER_BORDER));
				button.addActionListener(this);
				temp[i][j] = button;
				panel.add(button);
			}
		}
		return temp;
	}
	
	/** Sets the buttons in the array to non clickable
		@param buttons The button array
	*/
	public void setUnclickable(JButton[][] buttons){
		for(int i = 0; i < buttons.length; i++){
			for(int j = 0; j < buttons[0].length; j++){
				buttons[i][j].setEnabled(false);
			}
		}
	}
	
	/** Sets the buttons in the array to clickable
		@param buttons The button array
	*/
	public void setClickable(JButton[][] buttons){
		for(int i = 0; i < buttons.length; i++){
			for(int j = 0; j < buttons[0].length; j++){
				buttons[i][j].setEnabled(true);
			}
		}
	}
	
	/* Initializes the ships on the user board to predtermined locations **/
	public void initShips(){
		int row;
		int col;
		for(int i = 0; i < INIT_AC.length; i += 2){
			row = INIT_AC[i];
			col = INIT_AC[i+1];
			userButtons[row][col].setBackground(SHIP);
		}
		for(int i = 0; i < INIT_CR.length; i += 2){
			row = INIT_CR[i];
			col = INIT_CR[i+1];
			userButtons[row][col].setBackground(SHIP);
		}
		for(int i = 0; i < INIT_SB.length; i += 2){
			row = INIT_SB[i];
			col = INIT_SB[i+1];
			userButtons[row][col].setBackground(SHIP);
		}
		for(int i = 0; i < INIT_FR.length; i += 2){
			row = INIT_FR[i];
			col = INIT_FR[i+1];
			userButtons[row][col].setBackground(SHIP);
		}
		commander.setText("<html>Set your <br>ships<br>commander!</html>");
		shipLocations = new ArrayList<int[]>();
		shipLocations.add(INIT_AC);
		shipLocations.add(INIT_CR);
		shipLocations.add(INIT_SB);
		shipLocations.add(INIT_FR);
	}
	
	/** Starts a new thread to read a message from the server */
	public void newMessageThread(){
		Thread t = new Thread(new Runnable(){
        	public void run() {
		    		getMessage();
		    	}
			});
		t.start();
	}
	
	/** Starts the gameplay for both player one and player 2
		@param player the message from the server acknoledging the player number
	*/
	public void startGameplay(String player){
		setUnclickable(userButtons);
		setClickable(enemyButtons);
		if(player.contains("1")){
			if(DEBUG) System.out.println("Player one ready to play");
			newMessageThread(); //gets ok message
		}else{
			if(DEBUG) System.out.println("Player two ready to play");
			startDefense();
		}
	}
	
	/** Starts the defense turn for the user (changes game states, new thread to read message) */
	public void startDefense(){
		if(DEBUG) System.out.println("On defense");
		commander.setText("<html>Defend!</html>");
		attack = false;
		defend = true;
		newMessageThread(); //Gets message on defense
	}
	
	/** Starts the attack turn for the user (changes game states, commander message) */
	public void startOffense(){
		if(DEBUG) System.out.println("On offense");
		commander.setText("<html>Attack!</html>");
		attack = true;
		defend = false;
	}
	
	/**Recieves a message, either from the server or from the command line
		@return the recieved string message
	*/
	public void getMessage(){
		String message = server.recieve();
		if(DEBUG) System.out.println("RECEIVING: " + message);
		
		if(message.equals("ok")){
			startOffense();
		}else if(attack){
			if(!message.equals(ERROR)){
				updateEnemyBoard(message); //updates GUI
				startDefense();
			}	
		}else if(defend){
			updateUserBoard(message); //updates GUI
			startOffense();
		}else if(settingShips){ //Setting ships
			if(!message.equals(ERROR)){
				settingShips = false;
				submitButton.setEnabled(false);
				rotateButton.setEnabled(false);
				submitButton.setText(""); //making buttons invisible
				rotateButton.setText(""); //making buttons invisible
				startGameplay(message);
			}else{
				commander.setText("<html>Error!</html>");
				if(DEBUG) System.out.println("Error with ship locations");
			}
		}
	}
	
	/**Send a message, either to the server or to the command prompt
		@param message the string message to send
	*/
	public void sendMessage(String message){
		server.send(message);
		if(DEBUG) System.out.println("SENDING: " + message);
	}
	
	/** The actionPerformed method for the grid buttons */
	public void actionPerformed(ActionEvent e){
		if(settingShips){
			//TO DO
		}
		
		//Only executes when attacking the other player
		if(attack){
			GridButton button = (GridButton)e.getSource();
			sendMessage(button.getCoordinate()); //Sends attack
			newMessageThread(); //Gets response
		}
	}
	
	//
	public void updateEnemyBoard(String message){
		//TO DO
	}
	
	public void updateUserBoard(String message){
		//TO DO
	}
	
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) { //HOME
		System.out.println("home");
		//TO DO
	}

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { //HELP
        System.out.println("help");
		//TO DO
	}

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) { //SETTINGS
        System.out.println("settings");
		//TO DO
	}

	/** The submit button on the board, sends the ships location to the server and starts a new message thread
		@param evt the action event
	*/
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) { //SUBMIT
		String toSend = "";
		int row;
		int col;
		for(int i = 0; i < shipLocations.size(); i++){
			for(int j = 0; j < shipLocations.get(i).length; j+=2){
				if(i != 0 && j == 0) toSend += ",";
				if(j != 0) toSend += " ";
				row = shipLocations.get(i)[j];
				col = shipLocations.get(i)[j+1];
				toSend += "" + (char)(col+65) + (row+1);
			}
		}
		sendMessage(toSend);
		newMessageThread(); //gets return message (ack1 / ack2)
	}

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("rotate");
		//TO DO
    }

	
	private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Cursor", 0, 12)); // NOI18N
        setName("Battleship"); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setRequestFocusEnabled(false);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Orbitron", 0, 15)); // NOI18N
        jButton2.setText("help");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Orbitron", 0, 15)); // NOI18N
        jButton3.setText("settings");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Orbitron", 0, 15)); // NOI18N
        jButton5.setText("home");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton5.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jButton5.setName(""); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/commander.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Orbitron", 0, 11)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(200, 200, 200));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        jPanel2.setPreferredSize(new java.awt.Dimension(420, 420));
        jPanel2.setLayout(new java.awt.GridLayout(10,10));

        jPanel4.setBackground(new java.awt.Color(200, 200, 200));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        jPanel4.setPreferredSize(new java.awt.Dimension(420, 420));
        jPanel4.setLayout(new java.awt.GridLayout(10,10));

        jLabel6.setFont(new java.awt.Font("Orbitron", 0, 11)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ships.png"))); // NOI18N

        jLabel2.setIcon( new javax.swing.ImageIcon(getClass().getResource("/green_circle.png") )); // NOI18N
        jLabel2.setToolTipText("");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel5.setToolTipText("");

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel7.setToolTipText("");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Orbitron", 0, 11)); // NOI18N
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ships.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel10.setToolTipText("");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel11.setToolTipText("");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel12.setToolTipText("");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/green_circle.png"))); // NOI18N
        jLabel13.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Orbitron", 0, 24)); // NOI18N
        jLabel14.setText("Battleship");

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Orbitron", 0, 12)); // NOI18N
        jButton4.setText("submit");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Orbitron", 0, 12)); // NOI18N
        jButton6.setText("rotate");
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Orbitron", 0, 24)); // NOI18N
        jLabel15.setText("username");

        jLabel16.setFont(new java.awt.Font("Orbitron", 0, 24)); // NOI18N
        jLabel16.setText("username");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton3))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel16)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3))
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jLabel14))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8)
                                        .addGap(15, 15, 15))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel3))
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel12)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel10)
                                            .addGap(15, 15, 15))
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton6)))
        );
		
		
		//Remving as this class now extends a jPanel
		/*
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
		*/
    }
}
